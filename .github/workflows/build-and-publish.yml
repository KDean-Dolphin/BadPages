name: Build and publish to GitHub Pages

on:
  release:
    types:
      - published
  push:
    branches:
      - main

permissions:
  id-token: write
  pages: write

jobs:
  count-tags:
    runs-on: ubuntu-latest

    outputs:
      tag-count: ${{ steps.count-tags.outputs.tag-count }}

    steps:
      - name: Count tags
        id: count-tags
        run: |
          echo tag-count=`git tag --points-at HEAD "v*" | wc -l | xargs` >> "$GITHUB_OUTPUT"

  build:
    needs: count-tags

    if: needs.count-tags.outputs.tag-count == 0

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
      - name: Restore release
        if: github.event_name == 'push'
        run: |
          # Enable glob expansion.
          shopt -s extglob nullglob

          # Move pages to pages/preview directory.
          cd pages
          mkdir preview
          mv .!(|.) !(preview) preview/

          # Get and unzip release version.
          curl -s https://aidc-toolkit.github.io/pages.zip -o pages.zip
          unzip -qq pages.zip

      - name: Checkout default repository
        uses: actions/checkout@v4

      - name: Patch index.html
        run: |
          sed -i -e "s/EVENT/${{ github.event_name }}/g" pages/index.html
          sed -i -e "s/REF/${{ github.ref_name }}/g" pages/index.html
          sed -i -e "s/COMMIT/${{ github.sha }}/g" pages/index.html
          sed -i -e "s/DATE_TIME/`date`/g" pages/index.html

      - name: Configure GitHub Pages
        uses: actions/configure-pages@v5

      - name: Upload pages directory
        uses: actions/upload-pages-artifact@v3
        with:
          path: pages

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
