name: Build and publish to GitHub Pages

on:
  release:
    types:
      - published
  push:
    branches:
      - main

permissions:
  id-token: write
  pages: write

jobs:
  check-event:
    runs-on: ubuntu-latest

    outputs:
      run-build: ${{ steps.check-event.outputs.run-build }}

    steps:
      - name: Checkout default repository
        if: github.event_name == 'push'
        uses: actions/checkout@v4
        with:
          fetch-tags: 'true'

      - name: Check event
        id: check-event
        run: |
          if [ "${{ github.event_name }}" == "push" ]
          then
            echo Count `git tag --points-at HEAD "v*" | wc -l | xargs`
            # Build will be skipped if it has a tag that matches the version format.
            if [ `git tag --points-at HEAD "v*" | wc -l | xargs` != 0 ]
              run_build=false
            then
              run_build=true
            fi
          else
            # Build is always run on release.
            run_build=true
          fi
          
          echo run-build=$run_build >> "$GITHUB_OUTPUT"
          cat "$GITHUB_OUTPUT"

  build:
    needs: check-event

    if: needs.check-event.outputs.run-build == 'true'

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
      - name: Checkout default repository
        uses: actions/checkout@v4

      - name: Patch index.html
        run: |
          sed -i -e "s/EVENT/${{ github.event_name }}/g" pages/index.html
          sed -i -e "s/REF/${{ github.ref_name }}/g" pages/index.html
          sed -i -e "s/COMMIT/${{ github.sha }}/g" pages/index.html
          sed -i -e "s/DATE_TIME/`date`/g" pages/index.html

      - name: Configure GitHub Pages
        uses: actions/configure-pages@v5

      - name: Upload pages directory
        uses: actions/upload-pages-artifact@v3
        with:
          path: pages

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
